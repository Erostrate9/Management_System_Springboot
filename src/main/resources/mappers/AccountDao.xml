<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo3.dao.AccountDao">
    <select id="getAccount" resultType="com.example.demo3.entity.Account" parameterType="com.example.demo3.entity.Account">
        SELECT
            `id`,
            `ACCOUNT_MONTH` AS `month`,
            `CITY_CODE` AS `cityCode`,
            `PRODUCT_CODE` AS `productCode`,
            `ACCOUNT_TYPE_CODE` AS `typeCode`,
            `UPDATE_TIME` AS `updateTime`,
            `ACCOUN_FEE` AS `fee`
        FROM `operator`.`rp_account_gather_t`
        <where>
            <if test="cityCode != null and cityCode !=''">
                and CITY_CODE=#{cityCode}
            </if>
            <if test="productCode != null and productCode !=''">
                and PRODUCT_CODE=#{productCode}
            </if>
            <if test="typeCode != null and typeCode !=''">
                and ACCOUNT_TYPE_CODE=#{typeCode}
            </if>
            <if test="month != null and month !=''">
                and ACCOUNT_MONTH=#{month}
            </if>
        </where>
    </select>
    <select id="getCityCode" resultType="com.example.demo3.entity.CityCode">
        SELECT
            `CITY_CODE` AS `cityCode`,
            `CITY_NAME` AS `cityName`
        FROM `operator`.`rp_city_code_t`
    </select>
    <select id="getAccountType" resultType="com.example.demo3.entity.AccountType">
        SELECT
            `ACCOUNT_TYPE_CODE` AS `accountTypeCode`,
            `ACCOUNT_TYPE_NAME` AS `accountTypeName`
        FROM `operator`.`rp_account_type_code_t`;
    </select>
    <select id="getProductCode" resultType="com.example.demo3.entity.ProductCode">
        SELECT
            `PRODUCT_CODE` AS `productCode`,
            `PRODUCT_NAME` AS `productName`,
            `USE_FLAG` AS `useFlag`,
            `USE_ACCOUNT` AS `useAccount`,
            `USE_CARD_SALE` AS `cardSale`,
            `USE_BALANCE` AS `useBalance`,
            `USE_PRE_FEE` AS `usePreFee`,
            `USE_BUSINESS_FEE` AS `useBusinessFee`
        FROM `operator`.`rp_product_code_t`;
    </select>
    <select id="getAccountById" resultType="com.example.demo3.entity.Account">
        SELECT
            `id`,
            `ACCOUNT_MONTH` AS `month`,
            `CITY_CODE` AS `cityCode`,
            `PRODUCT_CODE` AS `productCode`,
            `ACCOUNT_TYPE_CODE` AS `typeCode`,
            `UPDATE_TIME` AS `updateTime`,
            `ACCOUN_FEE` AS `fee`
        FROM rp_account_gather_t
        WHERE id=#{id}
    </select>
    <insert id="insertAccount" parameterType="com.example.demo3.entity.Account">
        INSERT INTO rp_account_gather_t(ACCOUNT_MONTH,CITY_CODE,PRODUCT_CODE,ACCOUNT_TYPE_CODE,UPDATE_TIME,ACCOUN_FEE)
        VALUES(#{month},#{cityCode},#{productCode},#{typeCode},NOW(),#{fee})
    </insert>
    <update id="updateAccount" parameterType="com.example.demo3.entity.Account">
        UPDATE `rp_account_gather_t` SET
             `ACCOUNT_MONTH`=#{month},
             `CITY_CODE`=#{cityCode},
             `PRODUCT_CODE`=#{productCode},
             `ACCOUNT_TYPE_CODE`=#{typeCode},
             `UPDATE_TIME`=NOW(),
             `ACCOUN_FEE`=#{fee}
        WHERE id=#{id};
    </update>
    <delete id="deleteAccount" parameterType="Integer">
        DELETE FROM `rp_account_gather_t`
        WHERE `id` = #{id}
    </delete>

</mapper>